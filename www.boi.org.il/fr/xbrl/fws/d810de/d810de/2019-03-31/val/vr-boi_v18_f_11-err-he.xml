<?xml version="1.0" encoding="UTF-8"?>
<link:linkbase xmlns:acf="http://xbrl.org/2010/filter/aspect-cover"
    xmlns:boi_dim="http://www.boi.org.il/xbrl/dict/dim"
    xmlns:cf="http://xbrl.org/2008/filter/concept"
    xmlns:df="http://xbrl.org/2008/filter/dimension"
    xmlns:formula="http://xbrl.org/2008/formula"
    xmlns:gen="http://xbrl.org/2008/generic"
    xmlns:gf="http://xbrl.org/2008/filter/general"
    xmlns:link="http://www.xbrl.org/2003/linkbase"
    xmlns:msg="http://xbrl.org/2010/message"
    xmlns:pf="http://xbrl.org/2008/filter/period"
    xmlns:tf="http://xbrl.org/2008/filter/tuple"
    xmlns:va="http://xbrl.org/2008/assertion/value"
    xmlns:val="http://xbrl.org/2008/validation"
    xmlns:variable="http://xbrl.org/2008/variable"
    xmlns:xfi="http://www.xbrl.org/2008/function/instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://www.w3.org/1999/xlink http://www.xbrl.org/2003/xlink-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/filter/dimension http://www.xbrl.org/2008/dimension-filter.xsd http://xbrl.org/2008/formula http://www.xbrl.org/2008/formula.xsd http://xbrl.org/2008/variable http://www.xbrl.org/2008/variable.xsd http://xbrl.org/2008/filter/concept http://www.xbrl.org/2008/concept-filter.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd">
    <link:arcroleRef
        arcroleURI="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message"
        xlink:href="http://www.xbrl.org/2010/validation-message.xsd#assertion-unsatisfied-message" xlink:type="simple"/>
    <link:roleRef roleURI="http://www.xbrl.org/2008/role/link"
        xlink:href="http://www.xbrl.org/2008/generic-link.xsd#standard-link-role" xlink:type="simple"/>
    <link:roleRef roleURI="http://www.xbrl.org/2010/role/message"
        xlink:href="http://www.xbrl.org/2010/generic-message.xsd#standard-message" xlink:type="simple"/>
    <gen:link xlink:role="http://www.xbrl.org/2008/role/link" xlink:type="extended">
        <link:loc xlink:href="vr-boi_v18_f_11.xml#boi_v18_f_11"
            xlink:label="loc_boi_v18_f_11" xlink:type="locator"/>
        <msg:message separator=", "
            xlink:label="Message_he_boi_v18_f_11_unsatisfied"
            xlink:role="http://www.xbrl.org/2010/role/message"
            xlink:type="resource" xml:lang="he">שגיאה בספרת ביקורת {{if(and(string-length(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())})) = 9, string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}) != '111111111'), if(mod(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 1, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 2, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 2, 1)) * 2), 2, 1))), 'NaN', '000')) + number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 3, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 4, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 4, 1)) * 2), 2, 1))), 'NaN', '000')) + number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 5, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 6, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 6, 1)) * 2), 2, 1))), 'NaN', '000')) + number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 7, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 8, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 8, 1)) * 2), 2, 1))), 'NaN', '000')), 10) = 0, number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 9, 1)) = 0, 10 - mod(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 1, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 2, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 2, 1)) * 2), 2, 1))), 'NaN', '000')) + number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 3, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 4, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 4, 1)) * 2), 2, 1))), 'NaN', '000')) + number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 5, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 6, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 6, 1)) * 2), 2, 1))), 'NaN', '000')) + number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 7, 1)) + number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 8, 1)) * 2), 1, 1)) + number(translate(string(number(substring(string(number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 8, 1)) * 2), 2, 1))), 'NaN', '000')), 10) = number(substring(string({if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TDV'))) else (())}), 9, 1))), true())}}</msg:message>
        <gen:arc
            xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message"
            xlink:from="loc_boi_v18_f_11"
            xlink:to="Message_he_boi_v18_f_11_unsatisfied" xlink:type="arc"/>
    </gen:link>
</link:linkbase>
