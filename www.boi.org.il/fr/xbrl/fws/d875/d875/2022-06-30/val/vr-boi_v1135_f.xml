<?xml version="1.0" encoding="UTF-8"?>
<link:linkbase xmlns:acf="http://xbrl.org/2010/filter/aspect-cover"
    xmlns:boi_dim="http://www.boi.org.il/xbrl/dict/dim"
    xmlns:boi_met="http://www.boi.org.il/xbrl/dict/met"
    xmlns:cf="http://xbrl.org/2008/filter/concept"
    xmlns:df="http://xbrl.org/2008/filter/dimension"
    xmlns:find="http://www.eurofiling.info/xbrl/ext/filing-indicators"
    xmlns:formula="http://xbrl.org/2008/formula"
    xmlns:gen="http://xbrl.org/2008/generic"
    xmlns:gf="http://xbrl.org/2008/filter/general"
    xmlns:iaf="http://www.eurofiling.info/xbrl/func/interval-arithmetics"
    xmlns:link="http://www.xbrl.org/2003/linkbase"
    xmlns:msg="http://xbrl.org/2010/message"
    xmlns:pf="http://xbrl.org/2008/filter/period"
    xmlns:sev="http://xbrl.org/2016/assertion-severity"
    xmlns:tf="http://xbrl.org/2008/filter/tuple"
    xmlns:va="http://xbrl.org/2008/assertion/value"
    xmlns:val="http://xbrl.org/2008/validation"
    xmlns:variable="http://xbrl.org/2008/variable"
    xmlns:xfi="http://www.xbrl.org/2008/function/instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://www.w3.org/1999/xlink http://www.xbrl.org/2003/xlink-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/filter/dimension http://www.xbrl.org/2008/dimension-filter.xsd http://xbrl.org/2008/formula http://www.xbrl.org/2008/formula.xsd http://xbrl.org/2008/variable http://www.xbrl.org/2008/variable.xsd http://xbrl.org/2008/filter/concept http://www.xbrl.org/2008/concept-filter.xsd http://xbrl.org/2008/assertion/value http://www.xbrl.org/2008/value-assertion.xsd http://xbrl.org/2016/assertion-severity http://www.xbrl.org/2016/assertion-severity.xsd http://xbrl.org/2010/filter/aspect-cover http://www.xbrl.org/2010/aspect-cover-filter.xsd">
    <link:arcroleRef
        arcroleURI="http://xbrl.org/arcrole/2008/variable-filter"
        xlink:href="http://www.xbrl.org/2008/variable.xsd#variable-filter" xlink:type="simple"/>
    <link:arcroleRef
        arcroleURI="http://xbrl.org/arcrole/2008/variable-set"
        xlink:href="http://www.xbrl.org/2008/variable.xsd#variable-set" xlink:type="simple"/>
    <link:arcroleRef
        arcroleURI="http://xbrl.org/arcrole/2008/variable-set-filter"
        xlink:href="http://www.xbrl.org/2008/variable.xsd#variable-set-filter" xlink:type="simple"/>
    <link:arcroleRef
        arcroleURI="http://xbrl.org/arcrole/2008/variable-set-precondition"
        xlink:href="http://www.xbrl.org/2008/variable.xsd#variable-set-precondition" xlink:type="simple"/>
    <link:arcroleRef
        arcroleURI="http://xbrl.org/arcrole/2016/assertion-unsatisfied-severity"
        xlink:href="http://www.xbrl.org/2016/assertion-severity.xsd#assertion-unsatisfied-severity" xlink:type="simple"/>
    <link:roleRef roleURI="http://www.xbrl.org/2008/role/link"
        xlink:href="http://www.xbrl.org/2008/generic-link.xsd#standard-link-role" xlink:type="simple"/>
    <gen:link xlink:role="http://www.xbrl.org/2008/role/link" xlink:type="extended">
        <link:loc
            xlink:href="http://www.xbrl.org/2016/severities.xml#ERROR"
            xlink:label="loc_ERROR" xlink:type="locator"/>
        <acf:aspectCover id="label_unit_aspectcover_filter_filter"
            xlink:label="label_unit_aspectcover_filter_filter" xlink:type="resource">
            <acf:aspect>unit</acf:aspect>
        </acf:aspectCover>
        <cf:conceptName id="label_filter_1001_filter"
            xlink:label="label_filter_1001_filter" xlink:type="resource">
            <cf:concept>
                <cf:qname>boi_met:di46</cf:qname>
            </cf:concept>
        </cf:conceptName>
        <cf:conceptName id="label_filter_1003_filter"
            xlink:label="label_filter_1003_filter" xlink:type="resource">
            <cf:concept>
                <cf:qname>boi_met:bi1468</cf:qname>
            </cf:concept>
        </cf:conceptName>
        <variable:factVariable bindAsSequence="false" fallbackValue="()"
            id="var_430" xlink:label="var_430" xlink:type="resource"/>
        <variable:factVariable bindAsSequence="false" fallbackValue="()"
            id="var_431" xlink:label="var_431" xlink:type="resource"/>
        <variable:precondition id="boi_v1135_f.p1"
            test="(xs:boolean($v_0))=(true())"
            xlink:label="boi_v1135_f.p1" xlink:type="resource"/>
        <df:typedDimension
            id="label_typedDimensionFilter_TBD_1006_filter"
            xlink:label="label_typedDimensionFilter_TBD_1006_filter" xlink:type="resource">
            <df:dimension>
                <df:qname>boi_dim:TBD</df:qname>
            </df:dimension>
        </df:typedDimension>
        <df:typedDimension
            id="label_typedDimensionFilter_TFA_1005_filter"
            xlink:label="label_typedDimensionFilter_TFA_1005_filter" xlink:type="resource">
            <df:dimension>
                <df:qname>boi_dim:TFA</df:qname>
            </df:dimension>
        </df:typedDimension>
        <df:typedDimension
            id="label_typedDimensionFilter_TSD_1007_filter"
            xlink:label="label_typedDimensionFilter_TSD_1007_filter" xlink:type="resource">
            <df:dimension>
                <df:qname>boi_dim:TSD</df:qname>
            </df:dimension>
        </df:typedDimension>
        <df:typedDimension
            id="label_typedDimensionFilter_TST_1008_filter"
            xlink:label="label_typedDimensionFilter_TST_1008_filter" xlink:type="resource">
            <df:dimension>
                <df:qname>boi_dim:TST</df:qname>
            </df:dimension>
        </df:typedDimension>
        <df:typedDimension
            id="label_typedDimensionFilter_TXA_1010_filter"
            xlink:label="label_typedDimensionFilter_TXA_1010_filter" xlink:type="resource">
            <df:dimension>
                <df:qname>boi_dim:TXA</df:qname>
            </df:dimension>
        </df:typedDimension>
        <df:typedDimension
            id="label_typedDimensionFilter_TXT_1009_filter"
            xlink:label="label_typedDimensionFilter_TXT_1009_filter" xlink:type="resource">
            <df:dimension>
                <df:qname>boi_dim:TXT</df:qname>
            </df:dimension>
        </df:typedDimension>
        <va:valueAssertion aspectModel="dimensional" id="boi_v1135_f"
            implicitFiltering="true"
            test="(((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(5)) and ((((((((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10))=(0)) and ((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))=(0))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(5)) and (((10)-(((((((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10)))=(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1))))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(6)) and ((((((((((number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 1, 1)))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10))=(0)) and ((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))=(0))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(6)) and (((10)-(((((((((number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 1, 1)))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10)))=(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1))))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(7)) and (((((((((((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10))=(0)) and ((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1)))=(0))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(7)) and (((10)-((((((((((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10)))=(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1))))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(8)) and (((((((((((((number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 1, 1)))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10))=(0)) and ((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 8, 1)))=(0))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(8)) and (((10)-((((((((((((number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 1, 1)))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10)))=(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 8, 1))))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(9)) and ((((((((((((((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 8, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 8, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10))=(0)) and ((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 9, 1)))=(0))) or (((string-length(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (()))))=(9)) and (((10)-(((((((((((((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 1, 1)))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 2, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 3, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 4, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 5, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 6, 1)))*(2)), 2, 1))), 'NaN', '000'))))+(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 7, 1))))+(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 8, 1)))*(2)), 1, 1))))+(number(translate(string(number(substring(string((number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 8, 1)))*(2)), 2, 1))), 'NaN', '000')))) mod (10)))=(number(substring(string(if ($a) then (xfi:fact-typed-dimension-value($a, xs:QName('boi_dim:TSD'))/*) else (())), 9, 1)))))"
            xlink:label="boi_v1135_f" xlink:type="resource"/>
        <variable:variableFilterArc complement="false" cover="true"
            order="1001"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter"
            xlink:from="var_430" xlink:to="label_filter_1001_filter" xlink:type="arc"/>
        <variable:variableFilterArc complement="false" cover="true"
            order="1002"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter"
            xlink:from="var_430"
            xlink:to="label_unit_aspectcover_filter_filter" xlink:type="arc"/>
        <variable:variableFilterArc complement="false" cover="true"
            order="1003"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter"
            xlink:from="var_431" xlink:to="label_filter_1003_filter" xlink:type="arc"/>
        <variable:variableFilterArc complement="false" cover="true"
            order="1004"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter"
            xlink:from="var_431"
            xlink:to="label_unit_aspectcover_filter_filter" xlink:type="arc"/>
        <variable:variableArc name="a" order="1"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set"
            xlink:from="boi_v1135_f" xlink:to="var_430" xlink:type="arc"/>
        <variable:variableArc name="v_0" order="2"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set"
            xlink:from="boi_v1135_f" xlink:to="var_431" xlink:type="arc"/>
        <variable:variableSetFilterArc complement="false" order="1006"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-filter"
            xlink:from="boi_v1135_f"
            xlink:to="label_typedDimensionFilter_TBD_1006_filter" xlink:type="arc"/>
        <variable:variableSetFilterArc complement="false" order="1005"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-filter"
            xlink:from="boi_v1135_f"
            xlink:to="label_typedDimensionFilter_TFA_1005_filter" xlink:type="arc"/>
        <variable:variableSetFilterArc complement="false" order="1007"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-filter"
            xlink:from="boi_v1135_f"
            xlink:to="label_typedDimensionFilter_TSD_1007_filter" xlink:type="arc"/>
        <variable:variableSetFilterArc complement="false" order="1008"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-filter"
            xlink:from="boi_v1135_f"
            xlink:to="label_typedDimensionFilter_TST_1008_filter" xlink:type="arc"/>
        <variable:variableSetFilterArc complement="false" order="1010"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-filter"
            xlink:from="boi_v1135_f"
            xlink:to="label_typedDimensionFilter_TXA_1010_filter" xlink:type="arc"/>
        <variable:variableSetFilterArc complement="false" order="1009"
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-filter"
            xlink:from="boi_v1135_f"
            xlink:to="label_typedDimensionFilter_TXT_1009_filter" xlink:type="arc"/>
        <gen:arc
            xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set-precondition"
            xlink:from="boi_v1135_f" xlink:to="boi_v1135_f.p1" xlink:type="arc"/>
        <gen:arc
            xlink:arcrole="http://xbrl.org/arcrole/2016/assertion-unsatisfied-severity"
            xlink:from="boi_v1135_f" xlink:to="loc_ERROR" xlink:type="arc"/>
    </gen:link>
</link:linkbase>
