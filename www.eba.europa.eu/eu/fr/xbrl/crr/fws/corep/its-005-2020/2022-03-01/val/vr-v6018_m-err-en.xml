<?xml version="1.0" encoding="utf-8"?>
<?taxonomy-version 3.1.0.0 ?>  <?taxonomy-set-overall-version 3.2.0.0 ?>
<!--(C) EBA-->
<link:linkbase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:gen="http://xbrl.org/2008/generic" xmlns:label="http://xbrl.org/2008/label" xmlns:msg="http://xbrl.org/2010/message" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/label http://www.xbrl.org/2008/generic-label.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd">
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/validation-message.xsd#assertion-unsatisfied-message" />
  <link:roleRef roleURI="http://www.xbrl.org/2010/role/message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/generic-message.xsd#standard-message" />
  <link:roleRef roleURI="http://www.xbrl.org/2010/role/terseMessage" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/generic-message.xsd#terse-message" />
  <gen:link xlink:type="extended" xlink:role="http://www.xbrl.org/2003/role/link">
    <link:loc xlink:type="locator" xlink:href="vr-v6018_m.xml#eba_v6018_m" xlink:label="loc_eba_v6018_m" />
    <msg:message xlink:type="resource" xlink:label="eba_v6018_m" xml:lang="en" xlink:role="http://www.xbrl.org/2010/role/message">v6018_m: [C 16.00.a] if ({{r0110, c0040}} != empty and {{r0110, c0050}} != empty and {{r0110, c0060}} != empty and {{r0120, c0040}} != empty and {{r0120, c0050}} != empty and {{r0120, c0060}} != empty and ({{r0030, c0010}} * 18% + {{r0040, c0010}} * 18% + {{r0050, c0010}} * 12% + {{r0110, c0040}} * 15% + {{r0120, c0040}} * 12% + {{r0080, c0010}} * 18% + {{r0090, c0010}} * 15% + {{r0100, c0010}} * 12%) &gt; 0 and ({{r0030, c0020}} * 18% + {{r0040, c0020}} * 18% + {{r0050, c0020}} * 12% + {{r0110, c0050}} * 15% + {{r0120, c0050}} * 12% + {{r0080, c0020}} * 18% + {{r0090, c0020}} * 15% + {{r0100, c0020}} * 12%) &gt; 0 and ({{r0030, c0030}} * 18% + {{r0040, c0030}} * 18% + {{r0050, c0030}} * 12% + {{r0110, c0060}} * 15% + {{r0120, c0060}} * 12% + {{r0080, c0030}} * 18% + {{r0090, c0030}} * 15% + {{r0100, c0030}} * 12%) &gt; 0) then ({{r0020, c0070}} * 3 = {{r0030, c0010}} * 18% + {{r0040, c0010}} * 18% + {{r0050, c0010}} * 12% + {{r0110, c0040}} * 15% + {{r0120, c0040}} * 12% + {{r0080, c0010}} * 18% + {{r0090, c0010}} * 15% + {{r0100, c0010}} * 12% + {{r0030, c0020}} * 18% + {{r0040, c0020}} * 18% + {{r0050, c0020}} * 12% + {{r0110, c0050}} * 15% + {{r0120, c0050}} * 12% + {{r0080, c0020}} * 18% + {{r0090, c0020}} * 15% + {{r0100, c0020}} * 12% + {{r0030, c0030}} * 18% + {{r0040, c0030}} * 18% + {{r0050, c0030}} * 12% + {{r0110, c0060}} * 15% + {{r0120, c0060}} * 12% + {{r0080, c0030}} * 18% + {{r0090, c0030}} * 15% + {{r0100, c0030}} * 12%) FAILS because if ((not(empty($a) or xff:has-fallback-value(QName('', 'a'))) and not(empty($b) or xff:has-fallback-value(QName('', 'b'))) and not(empty($c) or xff:has-fallback-value(QName('', 'c'))) and not(empty($d) or xff:has-fallback-value(QName('', 'd'))) and not(empty($e) or xff:has-fallback-value(QName('', 'e'))) and not(empty($f) or xff:has-fallback-value(QName('', 'f'))) and ({$g} * 0.18 + {$h} * 0.18 + {$i} * 0.12 + {$j} * 0.15 + {$k} * 0.12 + {$l} * 0.18 + {$m} * 0.15 + {$n} * 0.12) &gt; 0 and ({$o} * 0.18 + {$p} * 0.18 + {$q} * 0.12 + {$r} * 0.15 + {$s} * 0.12 + {$t} * 0.18 + {$u} * 0.15 + {$v} * 0.12) &gt; 0 and ({$w} * 0.18 + {$x} * 0.18 + {$y} * 0.12 + {$z} * 0.15 + {$aa} * 0.12 + {$bb} * 0.18 + {$cc} * 0.15 + {$dd} * 0.12) &gt; 0)) then (({$ee} * 3 = {$ff} * 0.18 + {$gg} * 0.18 + {$hh} * 0.12 + {$ii} * 0.15 + {$jj} * 0.12 + {$kk} * 0.18 + {$ll} * 0.15 + {$mm} * 0.12 + {$nn} * 0.18 + {$oo} * 0.18 + {$pp} * 0.12 + {$qq} * 0.15 + {$rr} * 0.12 + {$ss} * 0.18 + {$tt} * 0.15 + {$uu} * 0.12 + {$vv} * 0.18 + {$ww} * 0.18 + {$xx} * 0.12 + {$yy} * 0.15 + {$zz} * 0.12 + {$aaa} * 0.18 + {$bbb} * 0.15 + {$ccc} * 0.12)) else (true()) is not true</msg:message>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:from="loc_eba_v6018_m" xlink:to="eba_v6018_m" />
    <msg:message xlink:type="resource" xlink:label="eba_v6018_m_1" xml:lang="en" xlink:role="http://www.xbrl.org/2010/role/terseMessage">v6018_m: [C 16.00.a] if ({{r0110, c0040}} != empty and {{r0110, c0050}} != empty and {{r0110, c0060}} != empty and {{r0120, c0040}} != empty and {{r0120, c0050}} != empty and {{r0120, c0060}} != empty and ({{r0030, c0010}} * 18% + {{r0040, c0010}} * 18% + {{r0050, c0010}} * 12% + {{r0110, c0040}} * 15% + {{r0120, c0040}} * 12% + {{r0080, c0010}} * 18% + {{r0090, c0010}} * 15% + {{r0100, c0010}} * 12%) &gt; 0 and ({{r0030, c0020}} * 18% + {{r0040, c0020}} * 18% + {{r0050, c0020}} * 12% + {{r0110, c0050}} * 15% + {{r0120, c0050}} * 12% + {{r0080, c0020}} * 18% + {{r0090, c0020}} * 15% + {{r0100, c0020}} * 12%) &gt; 0 and ({{r0030, c0030}} * 18% + {{r0040, c0030}} * 18% + {{r0050, c0030}} * 12% + {{r0110, c0060}} * 15% + {{r0120, c0060}} * 12% + {{r0080, c0030}} * 18% + {{r0090, c0030}} * 15% + {{r0100, c0030}} * 12%) &gt; 0) then ({{r0020, c0070}} * 3 = {{r0030, c0010}} * 18% + {{r0040, c0010}} * 18% + {{r0050, c0010}} * 12% + {{r0110, c0040}} * 15% + {{r0120, c0040}} * 12% + {{r0080, c0010}} * 18% + {{r0090, c0010}} * 15% + {{r0100, c0010}} * 12% + {{r0030, c0020}} * 18% + {{r0040, c0020}} * 18% + {{r0050, c0020}} * 12% + {{r0110, c0050}} * 15% + {{r0120, c0050}} * 12% + {{r0080, c0020}} * 18% + {{r0090, c0020}} * 15% + {{r0100, c0020}} * 12% + {{r0030, c0030}} * 18% + {{r0040, c0030}} * 18% + {{r0050, c0030}} * 12% + {{r0110, c0060}} * 15% + {{r0120, c0060}} * 12% + {{r0080, c0030}} * 18% + {{r0090, c0030}} * 15% + {{r0100, c0030}} * 12%) FAILS because if ((not(empty($a) or xff:has-fallback-value(QName('', 'a'))) and not(empty($b) or xff:has-fallback-value(QName('', 'b'))) and not(empty($c) or xff:has-fallback-value(QName('', 'c'))) and not(empty($d) or xff:has-fallback-value(QName('', 'd'))) and not(empty($e) or xff:has-fallback-value(QName('', 'e'))) and not(empty($f) or xff:has-fallback-value(QName('', 'f'))) and ({$g} * 0.18 + {$h} * 0.18 + {$i} * 0.12 + {$j} * 0.15 + {$k} * 0.12 + {$l} * 0.18 + {$m} * 0.15 + {$n} * 0.12) &gt; 0 and ({$o} * 0.18 + {$p} * 0.18 + {$q} * 0.12 + {$r} * 0.15 + {$s} * 0.12 + {$t} * 0.18 + {$u} * 0.15 + {$v} * 0.12) &gt; 0 and ({$w} * 0.18 + {$x} * 0.18 + {$y} * 0.12 + {$z} * 0.15 + {$aa} * 0.12 + {$bb} * 0.18 + {$cc} * 0.15 + {$dd} * 0.12) &gt; 0)) then (({$ee} * 3 = {$ff} * 0.18 + {$gg} * 0.18 + {$hh} * 0.12 + {$ii} * 0.15 + {$jj} * 0.12 + {$kk} * 0.18 + {$ll} * 0.15 + {$mm} * 0.12 + {$nn} * 0.18 + {$oo} * 0.18 + {$pp} * 0.12 + {$qq} * 0.15 + {$rr} * 0.12 + {$ss} * 0.18 + {$tt} * 0.15 + {$uu} * 0.12 + {$vv} * 0.18 + {$ww} * 0.18 + {$xx} * 0.12 + {$yy} * 0.15 + {$zz} * 0.12 + {$aaa} * 0.18 + {$bbb} * 0.15 + {$ccc} * 0.12)) else (true()) is not true</msg:message>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:from="loc_eba_v6018_m" xlink:to="eba_v6018_m_1" />
  </gen:link>
</link:linkbase>