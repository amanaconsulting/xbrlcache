<?xml version="1.0" encoding="utf-8"?>
<!--© Banco de España. Reservados todos los derechos-->
<link:linkbase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:gen="http://xbrl.org/2008/generic" xmlns:label="http://xbrl.org/2008/label" xmlns:msg="http://xbrl.org/2010/message" xmlns:fmt="http://www.bde.es/xbrl/func/error-formatting" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/label http://www.xbrl.org/2008/generic-label.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd">
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/validation-message.xsd#assertion-unsatisfied-message" />
  <link:roleRef roleURI="http://www.xbrl.org/2010/role/message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/generic-message.xsd#standard-message" />
  <gen:link xlink:type="extended" xlink:role="http://www.xbrl.org/2003/role/link">
    <link:loc xlink:type="locator" xlink:href="vr-qc2018_91.xml#es_QC2018_91" xlink:label="loc_es_QC2018_91" />
    <msg:message xlink:type="resource" xlink:label="es_QC2018_91" xml:lang="en" xlink:role="http://www.xbrl.org/2010/role/message">{fmt:common(($a))} substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 1, 4) = ('CORP', 'SMEC') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 5, 1) = ('_') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 6, 3) = ('ALL') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 9, 1) = ('_') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 14, 1) = ('_') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 15, 2) = ('CT') or substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 1, 8) = ('RETO_ALL') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 14, 8) = ('_CT_AIRB') or substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 1, 8) = ('SMOT_ALL') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 14, 8) = ('_CT_AIRB') or substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 1, 8) = ('MORT_ALL') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 14, 8) = ('_CT_AIRB') or substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 1, 8) = ('RSMS_ALL') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 14, 8) = ('_CT_AIRB') or substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 1, 8) = ('RQRR_ALL') and substring(distinct-values(for $i in {fmt:fact($a, ($a))} return xfi:fact-typed-dimension-value($i, xs:QName('ebacrr_dim:PBE'))/child::*/text()), 14, 8) = ('_CT_AIRB')</msg:message>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:from="loc_es_QC2018_91" xlink:to="es_QC2018_91" />
  </gen:link>
</link:linkbase>