<?xml version="1.0" encoding="utf-8"?>
<!--© Banco de España. Reservados todos los derechos-->
<link:linkbase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:gen="http://xbrl.org/2008/generic" xmlns:label="http://xbrl.org/2008/label" xmlns:msg="http://xbrl.org/2010/message" xmlns:fmt="http://www.bde.es/xbrl/func/error-formatting" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/label http://www.xbrl.org/2008/generic-label.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd">
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/validation-message.xsd#assertion-unsatisfied-message" />
  <link:roleRef roleURI="http://www.xbrl.org/2010/role/message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/generic-message.xsd#standard-message" />
  <gen:link xlink:type="extended" xlink:role="http://www.xbrl.org/2003/role/link">
    <link:loc xlink:type="locator" xlink:href="http://www.eba.europa.eu/eu/fr/xbrl/crr/fws/res/cir-2018-1624/2019-04-30/val/vr-e7496_e.xml#eba_e7496_e" xlink:label="loc_eba_e7496_e" />
    <msg:message xlink:type="resource" xlink:label="eba_e7496_e" xml:lang="es" xlink:role="http://www.xbrl.org/2010/role/message">{fmt:common(($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))} if ((not(empty(xfi:fact-typed-dimension-value({fmt:fact($a, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}, QName('http://www.eba.europa.eu/xbrl/crr/dict/dim', 'IDR'))/*[1]) or xff:has-fallback-value(QName('', 'a'))) and not(empty({fmt:fact($b, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'b'))))) then ((not(empty({fmt:fact($c, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'c'))) and not(empty({fmt:fact($d, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'd'))) and not(empty({fmt:fact($e, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'e'))) and not(empty({fmt:fact($f, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'f'))) and not(empty({fmt:fact($g, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'g'))) and not(empty({fmt:fact($h, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'h'))) and not(empty({fmt:fact($i, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'i'))) and not(empty({fmt:fact($j, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j))}) or xff:has-fallback-value(QName('', 'j'))))) else (true())</msg:message>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:from="loc_eba_e7496_e" xlink:to="eba_e7496_e" />
  </gen:link>
</link:linkbase>