<?xml version="1.0" encoding="utf-8"?>
<!--© Banco de España. Reservados todos los derechos-->
<link:linkbase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:gen="http://xbrl.org/2008/generic" xmlns:label="http://xbrl.org/2008/label" xmlns:msg="http://xbrl.org/2010/message" xmlns:fmt="http://www.bde.es/xbrl/func/error-formatting" xmlns:iaf="http://www.eurofiling.info/xbrl/func/interval-arithmetics" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/label http://www.xbrl.org/2008/generic-label.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd">
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/validation-message.xsd#assertion-unsatisfied-message" />
  <link:roleRef roleURI="http://www.xbrl.org/2010/role/message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/generic-message.xsd#standard-message" />
  <gen:link xlink:type="extended" xlink:role="http://www.xbrl.org/2003/role/link">
    <link:loc xlink:type="locator" xlink:href="http://www.eba.europa.eu/eu/fr/xbrl/crr/fws/corep/its-2013-02/2014-03-31/val/vr-v1141_m.xml#eba_v1141_m" xlink:label="loc_eba_v1141_m" />
    <msg:message xlink:type="resource" xlink:label="eba_v1141_m" xml:lang="es" xlink:role="http://www.xbrl.org/2010/role/message">{fmt:common(($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} if ({fmt:fact($a, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($a) + iaf:error-margin(0))} {fmt:difference(abs(($a) - (0)))}) then ({fmt:fact($b, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($b) + iaf:error-margin(0))} {fmt:difference(abs(($b) - (0)))} or {fmt:fact($c, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($c) + iaf:error-margin(0))} {fmt:difference(abs(($c) - (0)))} or {fmt:fact($d, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($d) + iaf:error-margin(0))} {fmt:difference(abs(($d) - (0)))} or {fmt:fact($e, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($e) + iaf:error-margin(0))} {fmt:difference(abs(($e) - (0)))} or {fmt:fact($f, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($f) + iaf:error-margin(0))} {fmt:difference(abs(($f) - (0)))} or {fmt:fact($g, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($g) + iaf:error-margin(0))} {fmt:difference(abs(($g) - (0)))} or {fmt:fact($h, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($h) + iaf:error-margin(0))} {fmt:difference(abs(($h) - (0)))} or {fmt:fact($i, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($i) + iaf:error-margin(0))} {fmt:difference(abs(($i) - (0)))} or {fmt:fact($j, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($j) + iaf:error-margin(0))} {fmt:difference(abs(($j) - (0)))} or {fmt:fact($k, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($k) + iaf:error-margin(0))} {fmt:difference(abs(($k) - (0)))} or {fmt:fact($l, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($l) + iaf:error-margin(0))} {fmt:difference(abs(($l) - (0)))} or {fmt:fact($m, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($m) + iaf:error-margin(0))} {fmt:difference(abs(($m) - (0)))} or {fmt:fact($n, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($n) + iaf:error-margin(0))} {fmt:difference(abs(($n) - (0)))} or {fmt:fact($o, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($o) + iaf:error-margin(0))} {fmt:difference(abs(($o) - (0)))} or {fmt:fact($p, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($p) + iaf:error-margin(0))} {fmt:difference(abs(($p) - (0)))} or {fmt:fact($q, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($q) + iaf:error-margin(0))} {fmt:difference(abs(($q) - (0)))} or {fmt:fact($r, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($r) + iaf:error-margin(0))} {fmt:difference(abs(($r) - (0)))} or {fmt:fact($s, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($s) + iaf:error-margin(0))} {fmt:difference(abs(($s) - (0)))} or {fmt:fact($t, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($t) + iaf:error-margin(0))} {fmt:difference(abs(($t) - (0)))} or {fmt:fact($u, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($u) + iaf:error-margin(0))} {fmt:difference(abs(($u) - (0)))} or {fmt:fact($v, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($v) + iaf:error-margin(0))} {fmt:difference(abs(($v) - (0)))} or {fmt:fact($w, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($w) + iaf:error-margin(0))} {fmt:difference(abs(($w) - (0)))} or {fmt:fact($x, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($x) + iaf:error-margin(0))} {fmt:difference(abs(($x) - (0)))} or {fmt:fact($y, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($y) + iaf:error-margin(0))} {fmt:difference(abs(($y) - (0)))} or {fmt:fact($z, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($z) + iaf:error-margin(0))} {fmt:difference(abs(($z) - (0)))} or {fmt:fact($aa, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($aa) + iaf:error-margin(0))} {fmt:difference(abs(($aa) - (0)))} or {fmt:fact($bb, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($bb) + iaf:error-margin(0))} {fmt:difference(abs(($bb) - (0)))} or {fmt:fact($cc, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($cc) + iaf:error-margin(0))} {fmt:difference(abs(($cc) - (0)))} or {fmt:fact($dd, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($dd) + iaf:error-margin(0))} {fmt:difference(abs(($dd) - (0)))} or {fmt:fact($ee, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee))} &gt; 0 {fmt:threshold(iaf:error-margin($ee) + iaf:error-margin(0))} {fmt:difference(abs(($ee) - (0)))}) else (true())</msg:message>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:from="loc_eba_v1141_m" xlink:to="eba_v1141_m" />
  </gen:link>
</link:linkbase>