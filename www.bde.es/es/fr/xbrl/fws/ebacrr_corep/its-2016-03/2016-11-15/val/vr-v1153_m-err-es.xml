<?xml version="1.0" encoding="utf-8"?>
<!--© Banco de España. Reservados todos los derechos-->
<link:linkbase xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:gen="http://xbrl.org/2008/generic" xmlns:label="http://xbrl.org/2008/label" xmlns:msg="http://xbrl.org/2010/message" xmlns:fmt="http://www.bde.es/xbrl/func/error-formatting" xmlns:iaf="http://www.eurofiling.info/xbrl/func/interval-arithmetics" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd http://xbrl.org/2008/label http://www.xbrl.org/2008/generic-label.xsd http://xbrl.org/2010/message http://www.xbrl.org/2010/generic-message.xsd">
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/validation-message.xsd#assertion-unsatisfied-message" />
  <link:roleRef roleURI="http://www.xbrl.org/2010/role/message" xlink:type="simple" xlink:href="http://www.xbrl.org/2010/generic-message.xsd#standard-message" />
  <gen:link xlink:type="extended" xlink:role="http://www.xbrl.org/2003/role/link">
    <link:loc xlink:type="locator" xlink:href="http://www.eba.europa.eu/eu/fr/xbrl/crr/fws/corep/its-2016-03/2016-11-15/val/vr-v1153_m.xml#eba_v1153_m" xlink:label="loc_eba_v1153_m" />
    <msg:message xlink:type="resource" xlink:label="eba_v1153_m" xml:lang="es" xlink:role="http://www.xbrl.org/2010/role/message">{fmt:common(($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} {fmt:fact($a, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 3 = (max(({fmt:fact($b, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($c, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($d, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.12 + ({fmt:fact($e, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($f, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($g, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.035) * 0.15 + ({fmt:fact($h, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($i, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($j, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.035) * 0.12 + {fmt:fact($k, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($l, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.15 + {fmt:fact($m, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.12, 0)) + max(({fmt:fact($n, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($o, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($p, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.12 + ({fmt:fact($q, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($r, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($s, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.035) * 0.15 + ({fmt:fact($t, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($u, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($v, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.035) * 0.12 + {fmt:fact($w, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($x, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.15 + {fmt:fact($y, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.12, 0)) + max(({fmt:fact($z, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($aa, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($bb, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.12 + ({fmt:fact($cc, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($dd, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($ee, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.035) * 0.15 + ({fmt:fact($ff, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($gg, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} + {fmt:fact($hh, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.035) * 0.12 + {fmt:fact($ii, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.18 + {fmt:fact($jj, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.15 + {fmt:fact($kk, ($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $aa, $bb, $cc, $dd, $ee, $ff, $gg, $hh, $ii, $jj, $kk))} * 0.12, 0))) {fmt:threshold(iaf:error-margin(iaf:numeric-multiply($a, 3)) + iaf:error-margin((iaf:sum((iaf:max((iaf:sum((iaf:numeric-multiply($b, 0.18), iaf:numeric-multiply($c, 0.18), iaf:numeric-multiply($d, 0.12), iaf:numeric-multiply((iaf:sum(($e, $f, iaf:numeric-multiply($g, 0.035)))), 0.15), iaf:numeric-multiply((iaf:sum(($h, $i, iaf:numeric-multiply($j, 0.035)))), 0.12), iaf:numeric-multiply($k, 0.18), iaf:numeric-multiply($l, 0.15), iaf:numeric-multiply($m, 0.12))), 0)), iaf:max((iaf:sum((iaf:numeric-multiply($n, 0.18), iaf:numeric-multiply($o, 0.18), iaf:numeric-multiply($p, 0.12), iaf:numeric-multiply((iaf:sum(($q, $r, iaf:numeric-multiply($s, 0.035)))), 0.15), iaf:numeric-multiply((iaf:sum(($t, $u, iaf:numeric-multiply($v, 0.035)))), 0.12), iaf:numeric-multiply($w, 0.18), iaf:numeric-multiply($x, 0.15), iaf:numeric-multiply($y, 0.12))), 0)), iaf:max((iaf:sum((iaf:numeric-multiply($z, 0.18), iaf:numeric-multiply($aa, 0.18), iaf:numeric-multiply($bb, 0.12), iaf:numeric-multiply((iaf:sum(($cc, $dd, iaf:numeric-multiply($ee, 0.035)))), 0.15), iaf:numeric-multiply((iaf:sum(($ff, $gg, iaf:numeric-multiply($hh, 0.035)))), 0.12), iaf:numeric-multiply($ii, 0.18), iaf:numeric-multiply($jj, 0.15), iaf:numeric-multiply($kk, 0.12))), 0)))))))} {fmt:difference(abs(($a * 3) - ((max(($b * 0.18 + $c * 0.18 + $d * 0.12 + ($e + $f + $g * 0.035) * 0.15 + ($h + $i + $j * 0.035) * 0.12 + $k * 0.18 + $l * 0.15 + $m * 0.12, 0)) + max(($n * 0.18 + $o * 0.18 + $p * 0.12 + ($q + $r + $s * 0.035) * 0.15 + ($t + $u + $v * 0.035) * 0.12 + $w * 0.18 + $x * 0.15 + $y * 0.12, 0)) + max(($z * 0.18 + $aa * 0.18 + $bb * 0.12 + ($cc + $dd + $ee * 0.035) * 0.15 + ($ff + $gg + $hh * 0.035) * 0.12 + $ii * 0.18 + $jj * 0.15 + $kk * 0.12, 0))))))}</msg:message>
    <gen:arc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2010/assertion-unsatisfied-message" xlink:from="loc_eba_v1153_m" xlink:to="eba_v1153_m" />
  </gen:link>
</link:linkbase>